{
  "openapi": "3.0.0",
  "paths": {
    "/api": {
      "get": {
        "operationId": "AppController_getHello",
        "summary": "Get welcome message",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns welcome message"
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/api/health": {
      "get": {
        "operationId": "AppController_getHealth",
        "summary": "Health check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns application health status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "timestamp": {
                      "type": "string",
                      "example": "2025-06-25T14:57:00.000Z"
                    },
                    "service": {
                      "type": "string",
                      "example": "MCP Server Chart MinIO"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/api/minio/buckets": {
      "get": {
        "operationId": "MinioController_listBuckets",
        "summary": "List all buckets",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns list of all buckets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "my-bucket"
                      },
                      "creationDate": {
                        "type": "string",
                        "example": "2025-06-25T14:57:00.000Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "minio"
        ]
      },
      "post": {
        "operationId": "MinioController_createBucket",
        "summary": "Create a new bucket",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Bucket creation data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "my-new-bucket",
                    "description": "Bucket name"
                  },
                  "region": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "Bucket region (optional)"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bucket created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bucket 'my-new-bucket' created successfully"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "minio"
        ]
      }
    },
    "/api/minio/buckets/{bucketName}": {
      "delete": {
        "operationId": "MinioController_deleteBucket",
        "summary": "Delete a bucket",
        "parameters": [
          {
            "name": "bucketName",
            "required": true,
            "in": "path",
            "description": "Name of the bucket to delete",
            "schema": {
              "example": "my-bucket",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bucket deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bucket 'my-bucket' deleted successfully"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "minio"
        ]
      }
    },
    "/api/minio/buckets/{bucketName}/objects": {
      "get": {
        "operationId": "MinioController_listObjects",
        "summary": "List objects in a bucket",
        "parameters": [
          {
            "name": "bucketName",
            "required": true,
            "in": "path",
            "description": "Name of the bucket",
            "schema": {
              "example": "my-bucket",
              "type": "string"
            }
          },
          {
            "name": "prefix",
            "required": false,
            "in": "query",
            "description": "Object prefix filter",
            "schema": {
              "example": "folder/",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns list of objects in the bucket",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "my-file.txt"
                      },
                      "size": {
                        "type": "number",
                        "example": 1024
                      },
                      "lastModified": {
                        "type": "string",
                        "example": "2025-06-25T14:57:00.000Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "minio"
        ]
      }
    },
    "/api/chart/render": {
      "post": {
        "operationId": "ChartController_renderChart",
        "summary": "Render chart and upload to MinIO",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Chart configuration",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "line",
                    "description": "Chart type (line, pie, column, bar, etc.)"
                  },
                  "data": {
                    "type": "array",
                    "example": [
                      {
                        "time": "2020",
                        "value": 100
                      },
                      {
                        "time": "2021",
                        "value": 120
                      },
                      {
                        "time": "2022",
                        "value": 140
                      }
                    ],
                    "description": "Chart data"
                  },
                  "title": {
                    "type": "string",
                    "example": "Sample Chart",
                    "description": "Chart title (optional)"
                  },
                  "width": {
                    "type": "number",
                    "example": 800,
                    "description": "Chart width (optional, default: 800)"
                  },
                  "height": {
                    "type": "number",
                    "example": 600,
                    "description": "Chart height (optional, default: 600)"
                  },
                  "theme": {
                    "type": "string",
                    "enum": [
                      "default",
                      "academy"
                    ],
                    "example": "default",
                    "description": "Chart theme (optional)"
                  }
                },
                "required": [
                  "type",
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chart rendered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true,
                      "description": "Indicates if the operation was successful"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": null,
                      "description": "Error message if operation failed, null if successful"
                    },
                    "resultObj": {
                      "type": "string",
                      "example": "![Chart](http://localhost:9000/charts/chart-uuid.png)\n\nChart rendered successfully. Direct URL: http://localhost:9000/charts/chart-uuid.png",
                      "description": "Markdown formatted string containing chart image and URL"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid chart configuration"
          },
          "500": {
            "description": "Chart rendering failed"
          }
        },
        "tags": [
          "chart"
        ]
      }
    },
    "/api/chart/types": {
      "get": {
        "operationId": "ChartController_getSupportedTypes",
        "summary": "Get supported chart types",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of supported chart types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "types": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "line",
                        "pie",
                        "column",
                        "bar",
                        "scatter"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "chart"
        ]
      }
    },
    "/api/chart/sample": {
      "get": {
        "operationId": "ChartController_generateSampleChart",
        "summary": "Generate sample chart",
        "parameters": [
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Chart type",
            "schema": {
              "example": "line",
              "type": "string"
            }
          },
          {
            "name": "theme",
            "required": false,
            "in": "query",
            "description": "Chart theme",
            "schema": {
              "enum": [
                "default",
                "academy"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sample chart rendered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": null
                    },
                    "resultObj": {
                      "type": "string",
                      "example": "![Sample Line Chart](http://localhost:9000/charts/chart-uuid.png)\n\nSample chart generated successfully.",
                      "description": "Markdown formatted string containing sample chart"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "chart"
        ]
      }
    },
    "/api/chart-generators/area": {
      "post": {
        "operationId": "generateAreaChart",
        "summary": "Generate Area Chart",
        "description": "Creates an area chart visualization with time series data. Area charts are ideal for showing trends over time and emphasizing the magnitude of change.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Area chart configuration and data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AreaChartDto"
              },
              "examples": {
                "monthly-sales": {
                  "summary": "Monthly Sales Data",
                  "description": "Example of monthly sales area chart",
                  "value": {
                    "title": "Monthly Sales Trend",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "time": "2023-01",
                        "value": 12500
                      },
                      {
                        "time": "2023-02",
                        "value": 15200
                      },
                      {
                        "time": "2023-03",
                        "value": 18700
                      },
                      {
                        "time": "2023-04",
                        "value": 16300
                      },
                      {
                        "time": "2023-05",
                        "value": 21800
                      },
                      {
                        "time": "2023-06",
                        "value": 19400
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Area chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                },
                "example": {
                  "url": "http://localhost:9000/charts/area-chart-uuid.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&...",
                  "filename": "area-chart-12345678-1234-1234-1234-123456789abc.png"
                }
              }
            }
          },
          "400": {
            "description": "Invalid chart data or configuration provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/bar": {
      "post": {
        "operationId": "generateBarChart",
        "summary": "Generate Bar Chart",
        "description": "Creates a horizontal bar chart for comparing different categories. Bar charts are perfect for displaying categorical data with clear comparisons.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Bar chart configuration and data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarChartDto"
              },
              "examples": {
                "product-comparison": {
                  "summary": "Product Sales Comparison",
                  "description": "Comparing sales across different products",
                  "value": {
                    "title": "Product Sales Comparison",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "category": "Product A",
                        "value": 32000
                      },
                      {
                        "category": "Product B",
                        "value": 45000
                      },
                      {
                        "category": "Product C",
                        "value": 28000
                      },
                      {
                        "category": "Product D",
                        "value": 52000
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bar chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid chart data or configuration provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/boxplot": {
      "post": {
        "operationId": "generateBoxplotChart",
        "summary": "Generate Box Plot Chart",
        "description": "Creates a box plot (box-and-whisker plot) to display statistical distribution of data. Shows median, quartiles, and outliers.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Box plot chart configuration and statistical data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoxplotChartDto"
              },
              "examples": {
                "statistical-analysis": {
                  "summary": "Statistical Data Analysis",
                  "description": "Box plot showing distribution across different groups",
                  "value": {
                    "title": "Score Distribution by Group",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "category": "Group A",
                        "min": 45,
                        "q1": 60,
                        "median": 75,
                        "q3": 85,
                        "max": 95
                      },
                      {
                        "category": "Group B",
                        "min": 50,
                        "q1": 65,
                        "median": 78,
                        "q3": 88,
                        "max": 98
                      },
                      {
                        "category": "Group C",
                        "min": 40,
                        "q1": 55,
                        "median": 70,
                        "q3": 80,
                        "max": 90
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Box plot chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid statistical data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/column": {
      "post": {
        "operationId": "generateColumnChart",
        "summary": "Generate Column Chart",
        "description": "Creates a vertical column chart for displaying categorical data. Column charts are excellent for comparing values across categories.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Column chart configuration and data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnChartDto"
              },
              "examples": {
                "quarterly-revenue": {
                  "summary": "Quarterly Revenue",
                  "description": "Column chart showing quarterly revenue data",
                  "value": {
                    "title": "Quarterly Revenue 2023",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "category": "Q1",
                        "value": 125000
                      },
                      {
                        "category": "Q2",
                        "value": 148000
                      },
                      {
                        "category": "Q3",
                        "value": 162000
                      },
                      {
                        "category": "Q4",
                        "value": 185000
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Column chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid chart data or configuration provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/district-map": {
      "post": {
        "operationId": "generateDistrictMap",
        "summary": "Generate District Map Chart",
        "description": "Creates a geographic district map visualization showing data distribution across different administrative regions.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "District map configuration and geographic data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistrictMapDto"
              },
              "examples": {
                "population-distribution": {
                  "summary": "Population Distribution",
                  "description": "District map showing population distribution across cities",
                  "value": {
                    "title": "Population Distribution by District",
                    "width": 900,
                    "height": 700,
                    "theme": "default",
                    "data": [
                      {
                        "district": "Beijing",
                        "value": 21540000
                      },
                      {
                        "district": "Shanghai",
                        "value": 24280000
                      },
                      {
                        "district": "Guangzhou",
                        "value": 15300000
                      },
                      {
                        "district": "Shenzhen",
                        "value": 13440000
                      },
                      {
                        "district": "Chengdu",
                        "value": 20940000
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "District map generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid geographic data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/dual-axes": {
      "post": {
        "operationId": "generateDualAxesChart",
        "summary": "Generate Dual Axes Chart",
        "description": "Creates a chart with two different Y-axes, perfect for displaying two related data series with different scales or units.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dual axes chart configuration with two value series",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DualAxesDto"
              },
              "examples": {
                "sales-and-profit": {
                  "summary": "Sales and Profit Analysis",
                  "description": "Dual axes chart showing sales volume and profit margin",
                  "value": {
                    "title": "Sales Volume vs Profit Margin",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "time": "2023-01",
                        "sales": 125000,
                        "profit": 8.5
                      },
                      {
                        "time": "2023-02",
                        "sales": 148000,
                        "profit": 9.2
                      },
                      {
                        "time": "2023-03",
                        "sales": 162000,
                        "profit": 7.8
                      },
                      {
                        "time": "2023-04",
                        "sales": 185000,
                        "profit": 10.1
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Dual axes chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid dual axes data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/fishbone-diagram": {
      "post": {
        "operationId": "generateFishboneDiagram",
        "summary": "Generate Fishbone Diagram",
        "description": "Creates a fishbone (Ishikawa) diagram for root cause analysis, showing cause-and-effect relationships.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Fishbone diagram configuration with causes and categories",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FishboneDiagramDto"
              },
              "examples": {
                "quality-issues": {
                  "summary": "Quality Issue Analysis",
                  "description": "Fishbone diagram for analyzing product quality issues",
                  "value": {
                    "title": "Product Quality Issue Analysis",
                    "width": 1000,
                    "height": 700,
                    "theme": "default",
                    "data": [
                      {
                        "category": "People",
                        "cause": "Insufficient training"
                      },
                      {
                        "category": "People",
                        "cause": "Lack of experience"
                      },
                      {
                        "category": "Process",
                        "cause": "Unclear procedures"
                      },
                      {
                        "category": "Process",
                        "cause": "Inefficient workflow"
                      },
                      {
                        "category": "Equipment",
                        "cause": "Outdated machinery"
                      },
                      {
                        "category": "Equipment",
                        "cause": "Poor maintenance"
                      },
                      {
                        "category": "Materials",
                        "cause": "Low quality inputs"
                      },
                      {
                        "category": "Environment",
                        "cause": "Temperature fluctuations"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Fishbone diagram generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid fishbone diagram data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/flow-diagram": {
      "post": {
        "operationId": "generateFlowDiagram",
        "summary": "Generate Flow Diagram",
        "description": "Creates a flowchart diagram to visualize processes, workflows, or decision trees with nodes and connections.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Flow diagram configuration with nodes and edges",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowDiagramDto"
              },
              "examples": {
                "business-process": {
                  "summary": "Business Process Flow",
                  "description": "Flowchart showing a typical business approval process",
                  "value": {
                    "title": "Order Approval Process",
                    "width": 900,
                    "height": 700,
                    "theme": "default",
                    "data": [
                      {
                        "id": "1",
                        "label": "Start",
                        "type": "start"
                      },
                      {
                        "id": "2",
                        "label": "Receive Order",
                        "type": "process"
                      },
                      {
                        "id": "3",
                        "label": "Check Inventory",
                        "type": "process"
                      },
                      {
                        "id": "4",
                        "label": "In Stock?",
                        "type": "decision"
                      },
                      {
                        "id": "5",
                        "label": "Process Order",
                        "type": "process"
                      },
                      {
                        "id": "6",
                        "label": "Backorder",
                        "type": "process"
                      },
                      {
                        "id": "7",
                        "label": "End",
                        "type": "end"
                      },
                      {
                        "from": "1",
                        "to": "2"
                      },
                      {
                        "from": "2",
                        "to": "3"
                      },
                      {
                        "from": "3",
                        "to": "4"
                      },
                      {
                        "from": "4",
                        "to": "5",
                        "label": "Yes"
                      },
                      {
                        "from": "4",
                        "to": "6",
                        "label": "No"
                      },
                      {
                        "from": "5",
                        "to": "7"
                      },
                      {
                        "from": "6",
                        "to": "7"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Flow diagram generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid flow diagram structure provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/funnel": {
      "post": {
        "operationId": "generateFunnelChart",
        "summary": "Generate Funnel Chart",
        "description": "Creates a funnel chart to visualize stages in a process and conversion rates, commonly used for sales pipelines.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Funnel chart configuration with stages and values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FunnelChartDto"
              },
              "examples": {
                "sales-funnel": {
                  "summary": "Sales Conversion Funnel",
                  "description": "Funnel showing customer conversion through sales stages",
                  "value": {
                    "title": "Sales Conversion Funnel",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "stage": "Website Visitors",
                        "value": 10000
                      },
                      {
                        "stage": "Product Views",
                        "value": 5000
                      },
                      {
                        "stage": "Add to Cart",
                        "value": 1500
                      },
                      {
                        "stage": "Checkout Started",
                        "value": 800
                      },
                      {
                        "stage": "Purchase Completed",
                        "value": 500
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Funnel chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid funnel data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/histogram": {
      "post": {
        "operationId": "generateHistogramChart",
        "summary": "Generate Histogram Chart",
        "description": "Creates a histogram to display the distribution of numerical data across different bins or intervals.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Histogram chart configuration with bins and frequencies",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistogramChartDto"
              },
              "examples": {
                "age-distribution": {
                  "summary": "Age Distribution",
                  "description": "Histogram showing age distribution in a population",
                  "value": {
                    "title": "Population Age Distribution",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "bin": "0-10",
                        "frequency": 120
                      },
                      {
                        "bin": "10-20",
                        "frequency": 180
                      },
                      {
                        "bin": "20-30",
                        "frequency": 250
                      },
                      {
                        "bin": "30-40",
                        "frequency": 300
                      },
                      {
                        "bin": "40-50",
                        "frequency": 280
                      },
                      {
                        "bin": "50-60",
                        "frequency": 200
                      },
                      {
                        "bin": "60+",
                        "frequency": 150
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Histogram chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid histogram data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/line": {
      "post": {
        "operationId": "generateLineChart",
        "summary": "Generate Line Chart",
        "description": "Creates a line chart to show trends and changes over time, perfect for time series data visualization.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Line chart configuration with x and y coordinates",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LineChartDto"
              },
              "examples": {
                "stock-price": {
                  "summary": "Stock Price Trend",
                  "description": "Line chart showing stock price movement over time",
                  "value": {
                    "title": "Stock Price Trend",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "x": "2023-01",
                        "y": 145.2
                      },
                      {
                        "x": "2023-02",
                        "y": 152.8
                      },
                      {
                        "x": "2023-03",
                        "y": 148.9
                      },
                      {
                        "x": "2023-04",
                        "y": 156.4
                      },
                      {
                        "x": "2023-05",
                        "y": 163.7
                      },
                      {
                        "x": "2023-06",
                        "y": 159.3
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Line chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid line chart data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/liquid": {
      "post": {
        "operationId": "generateLiquidChart",
        "summary": "Generate Liquid Chart",
        "description": "Creates a liquid fill gauge chart to display percentage or progress values in an engaging visual format.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Liquid chart configuration with percentage value",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LiquidChartDto"
              },
              "examples": {
                "completion-rate": {
                  "summary": "Project Completion Rate",
                  "description": "Liquid chart showing project completion percentage",
                  "value": {
                    "title": "Project Completion Rate",
                    "width": 400,
                    "height": 400,
                    "theme": "default",
                    "data": [
                      {
                        "percent": 0.73
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Liquid chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid liquid chart data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/mind-map": {
      "post": {
        "operationId": "generateMindMap",
        "summary": "Generate Mind Map",
        "description": "Creates a mind map visualization to show hierarchical relationships and brainstorming ideas around a central topic.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Mind map configuration with hierarchical node structure",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MindMapDto"
              },
              "examples": {
                "project-planning": {
                  "summary": "Project Planning Mind Map",
                  "description": "Mind map for software project planning",
                  "value": {
                    "title": "Software Project Planning",
                    "width": 1000,
                    "height": 800,
                    "theme": "default",
                    "data": [
                      {
                        "id": "1",
                        "name": "Software Project",
                        "parent": null
                      },
                      {
                        "id": "2",
                        "name": "Planning",
                        "parent": "1"
                      },
                      {
                        "id": "3",
                        "name": "Development",
                        "parent": "1"
                      },
                      {
                        "id": "4",
                        "name": "Testing",
                        "parent": "1"
                      },
                      {
                        "id": "5",
                        "name": "Deployment",
                        "parent": "1"
                      },
                      {
                        "id": "6",
                        "name": "Requirements",
                        "parent": "2"
                      },
                      {
                        "id": "7",
                        "name": "Timeline",
                        "parent": "2"
                      },
                      {
                        "id": "8",
                        "name": "Frontend",
                        "parent": "3"
                      },
                      {
                        "id": "9",
                        "name": "Backend",
                        "parent": "3"
                      },
                      {
                        "id": "10",
                        "name": "Unit Tests",
                        "parent": "4"
                      },
                      {
                        "id": "11",
                        "name": "Integration Tests",
                        "parent": "4"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Mind map generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid mind map structure provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/network-graph": {
      "post": {
        "operationId": "generateNetworkGraph",
        "summary": "Generate Network Graph",
        "description": "Creates a network graph visualization to show relationships and connections between different entities or nodes.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Network graph configuration with nodes and edges",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkGraphDto"
              },
              "examples": {
                "social-network": {
                  "summary": "Social Network Connections",
                  "description": "Network graph showing social connections between users",
                  "value": {
                    "title": "Social Network Analysis",
                    "width": 900,
                    "height": 700,
                    "theme": "default",
                    "data": [
                      {
                        "id": "A",
                        "label": "Alice"
                      },
                      {
                        "id": "B",
                        "label": "Bob"
                      },
                      {
                        "id": "C",
                        "label": "Charlie"
                      },
                      {
                        "id": "D",
                        "label": "Diana"
                      },
                      {
                        "id": "E",
                        "label": "Eve"
                      },
                      {
                        "source": "A",
                        "target": "B"
                      },
                      {
                        "source": "A",
                        "target": "C"
                      },
                      {
                        "source": "B",
                        "target": "D"
                      },
                      {
                        "source": "C",
                        "target": "D"
                      },
                      {
                        "source": "D",
                        "target": "E"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Network graph generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid network graph data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/organization-chart": {
      "post": {
        "operationId": "generateOrganizationChart",
        "summary": "Generate Organization Chart",
        "description": "Creates an organizational hierarchy chart to visualize company structure and reporting relationships.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Organization chart configuration with employee hierarchy",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationChartDto"
              },
              "examples": {
                "company-structure": {
                  "summary": "Company Organizational Structure",
                  "description": "Organization chart showing company hierarchy",
                  "value": {
                    "title": "Company Organizational Structure",
                    "width": 1000,
                    "height": 800,
                    "theme": "default",
                    "data": [
                      {
                        "id": "1",
                        "name": "John Smith",
                        "title": "CEO",
                        "parent": null
                      },
                      {
                        "id": "2",
                        "name": "Sarah Johnson",
                        "title": "CTO",
                        "parent": "1"
                      },
                      {
                        "id": "3",
                        "name": "Mike Davis",
                        "title": "CFO",
                        "parent": "1"
                      },
                      {
                        "id": "4",
                        "name": "Lisa Chen",
                        "title": "VP Engineering",
                        "parent": "2"
                      },
                      {
                        "id": "5",
                        "name": "Tom Wilson",
                        "title": "VP Product",
                        "parent": "2"
                      },
                      {
                        "id": "6",
                        "name": "Anna Brown",
                        "title": "Senior Developer",
                        "parent": "4"
                      },
                      {
                        "id": "7",
                        "name": "David Lee",
                        "title": "Product Manager",
                        "parent": "5"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organization chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid organization chart data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/path-map": {
      "post": {
        "operationId": "generatePathMap",
        "summary": "Generate Path Map Chart",
        "description": "Creates a path map visualization showing routes and connections between geographic locations with flow values.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Path map configuration with geographic routes and flow data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PathMapDto"
              },
              "examples": {
                "shipping-routes": {
                  "summary": "Shipping Routes Analysis",
                  "description": "Path map showing shipping routes and cargo volumes",
                  "value": {
                    "title": "Global Shipping Routes",
                    "width": 1000,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "from": "Shanghai",
                        "to": "Los Angeles",
                        "value": 2500
                      },
                      {
                        "from": "Shanghai",
                        "to": "Hamburg",
                        "value": 1800
                      },
                      {
                        "from": "Singapore",
                        "to": "Rotterdam",
                        "value": 1200
                      },
                      {
                        "from": "Hong Kong",
                        "to": "Long Beach",
                        "value": 2000
                      },
                      {
                        "from": "Busan",
                        "to": "Seattle",
                        "value": 1500
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Path map generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid path map data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/pie": {
      "post": {
        "operationId": "generatePieChart",
        "summary": "Generate Pie Chart",
        "description": "Creates a pie chart to display proportional data and show parts of a whole, ideal for showing percentages and distributions.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Pie chart configuration with categories and values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PieChartDto"
              },
              "examples": {
                "market-share": {
                  "summary": "Market Share Distribution",
                  "description": "Pie chart showing market share across different companies",
                  "value": {
                    "title": "Market Share by Company",
                    "width": 600,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "category": "Company A",
                        "value": 35.5
                      },
                      {
                        "category": "Company B",
                        "value": 28.2
                      },
                      {
                        "category": "Company C",
                        "value": 18.7
                      },
                      {
                        "category": "Company D",
                        "value": 12.1
                      },
                      {
                        "category": "Others",
                        "value": 5.5
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pie chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid pie chart data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/pin-map": {
      "post": {
        "operationId": "generatePinMap",
        "summary": "Generate Pin Map Chart",
        "description": "Creates a pin map visualization showing specific locations with values on a geographic map using coordinates.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Pin map configuration with geographic coordinates and location data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PinMapDto"
              },
              "examples": {
                "store-locations": {
                  "summary": "Store Locations and Sales",
                  "description": "Pin map showing store locations with sales data",
                  "value": {
                    "title": "Store Locations and Performance",
                    "width": 900,
                    "height": 700,
                    "theme": "default",
                    "data": [
                      {
                        "lat": 39.9042,
                        "lng": 116.4074,
                        "name": "Beijing Store",
                        "value": 85000
                      },
                      {
                        "lat": 31.2304,
                        "lng": 121.4737,
                        "name": "Shanghai Store",
                        "value": 120000
                      },
                      {
                        "lat": 23.1291,
                        "lng": 113.2644,
                        "name": "Guangzhou Store",
                        "value": 95000
                      },
                      {
                        "lat": 22.3193,
                        "lng": 114.1694,
                        "name": "Hong Kong Store",
                        "value": 110000
                      },
                      {
                        "lat": 30.5728,
                        "lng": 104.0668,
                        "name": "Chengdu Store",
                        "value": 75000
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pin map generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid pin map coordinates provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/radar": {
      "post": {
        "operationId": "generateRadarChart",
        "summary": "Generate Radar Chart",
        "description": "Creates a radar (spider) chart to display multivariate data across multiple dimensions, perfect for comparing profiles.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Radar chart configuration with multiple dimensions and values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RadarChartDto"
              },
              "examples": {
                "skill-assessment": {
                  "summary": "Employee Skill Assessment",
                  "description": "Radar chart showing employee skills across different dimensions",
                  "value": {
                    "title": "Employee Skill Assessment",
                    "width": 600,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "dimension": "Technical Skills",
                        "value": 85
                      },
                      {
                        "dimension": "Communication",
                        "value": 78
                      },
                      {
                        "dimension": "Leadership",
                        "value": 72
                      },
                      {
                        "dimension": "Problem Solving",
                        "value": 90
                      },
                      {
                        "dimension": "Creativity",
                        "value": 68
                      },
                      {
                        "dimension": "Team Work",
                        "value": 82
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Radar chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid radar chart data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/sankey": {
      "post": {
        "operationId": "generateSankeyChart",
        "summary": "Generate Sankey Chart",
        "description": "Creates a Sankey diagram to visualize flow and transfer of resources, energy, or data between different stages or categories.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Sankey chart configuration with flow data between nodes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SankeyChartDto"
              },
              "examples": {
                "energy-flow": {
                  "summary": "Energy Flow Analysis",
                  "description": "Sankey diagram showing energy distribution in a system",
                  "value": {
                    "title": "Energy Distribution System",
                    "width": 900,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "source": "Coal",
                        "target": "Electricity",
                        "value": 45
                      },
                      {
                        "source": "Natural Gas",
                        "target": "Electricity",
                        "value": 25
                      },
                      {
                        "source": "Nuclear",
                        "target": "Electricity",
                        "value": 15
                      },
                      {
                        "source": "Renewable",
                        "target": "Electricity",
                        "value": 15
                      },
                      {
                        "source": "Electricity",
                        "target": "Residential",
                        "value": 35
                      },
                      {
                        "source": "Electricity",
                        "target": "Commercial",
                        "value": 25
                      },
                      {
                        "source": "Electricity",
                        "target": "Industrial",
                        "value": 40
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sankey chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Sankey flow data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/scatter": {
      "post": {
        "operationId": "generateScatterChart",
        "summary": "Generate Scatter Plot Chart",
        "description": "Creates a scatter plot to show the relationship between two numerical variables and identify correlations or patterns.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Scatter plot configuration with x and y coordinate data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScatterChartDto"
              },
              "examples": {
                "height-weight-correlation": {
                  "summary": "Height vs Weight Correlation",
                  "description": "Scatter plot showing correlation between height and weight",
                  "value": {
                    "title": "Height vs Weight Correlation Analysis",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "x": 165.5,
                        "y": 68.2
                      },
                      {
                        "x": 170.2,
                        "y": 72.5
                      },
                      {
                        "x": 158.8,
                        "y": 55.8
                      },
                      {
                        "x": 182.1,
                        "y": 85.3
                      },
                      {
                        "x": 175.6,
                        "y": 78.9
                      },
                      {
                        "x": 160.3,
                        "y": 58.7
                      },
                      {
                        "x": 168.9,
                        "y": 71.2
                      },
                      {
                        "x": 177.4,
                        "y": 80.1
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Scatter plot generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid scatter plot data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/treemap": {
      "post": {
        "operationId": "generateTreemapChart",
        "summary": "Generate Treemap Chart",
        "description": "Creates a treemap visualization to display hierarchical data using nested rectangles, with size representing values.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Treemap chart configuration with hierarchical data structure",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TreemapChartDto"
              },
              "examples": {
                "budget-allocation": {
                  "summary": "Budget Allocation Treemap",
                  "description": "Treemap showing budget allocation across departments",
                  "value": {
                    "title": "Company Budget Allocation",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "name": "Company",
                        "parent": "",
                        "value": 1000000
                      },
                      {
                        "name": "Engineering",
                        "parent": "Company",
                        "value": 400000
                      },
                      {
                        "name": "Marketing",
                        "parent": "Company",
                        "value": 250000
                      },
                      {
                        "name": "Sales",
                        "parent": "Company",
                        "value": 200000
                      },
                      {
                        "name": "Operations",
                        "parent": "Company",
                        "value": 150000
                      },
                      {
                        "name": "Frontend Dev",
                        "parent": "Engineering",
                        "value": 180000
                      },
                      {
                        "name": "Backend Dev",
                        "parent": "Engineering",
                        "value": 220000
                      },
                      {
                        "name": "Digital Marketing",
                        "parent": "Marketing",
                        "value": 150000
                      },
                      {
                        "name": "Content Marketing",
                        "parent": "Marketing",
                        "value": 100000
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Treemap chart generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid treemap hierarchical data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/venn": {
      "post": {
        "operationId": "generateVennChart",
        "summary": "Generate Venn Diagram",
        "description": "Creates a Venn diagram to visualize set relationships, intersections, and overlaps between different groups or categories.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Venn diagram configuration with sets and intersection data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VennChartDto"
              },
              "examples": {
                "skill-overlap": {
                  "summary": "Employee Skill Overlap",
                  "description": "Venn diagram showing skill overlap between different teams",
                  "value": {
                    "title": "Team Skill Overlap Analysis",
                    "width": 600,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "sets": [
                          "Frontend"
                        ],
                        "size": 25
                      },
                      {
                        "sets": [
                          "Backend"
                        ],
                        "size": 30
                      },
                      {
                        "sets": [
                          "DevOps"
                        ],
                        "size": 15
                      },
                      {
                        "sets": [
                          "Frontend",
                          "Backend"
                        ],
                        "size": 8
                      },
                      {
                        "sets": [
                          "Frontend",
                          "DevOps"
                        ],
                        "size": 5
                      },
                      {
                        "sets": [
                          "Backend",
                          "DevOps"
                        ],
                        "size": 10
                      },
                      {
                        "sets": [
                          "Frontend",
                          "Backend",
                          "DevOps"
                        ],
                        "size": 3
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Venn diagram generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Venn diagram set data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/violin": {
      "post": {
        "operationId": "generateViolinChart",
        "summary": "Generate Violin Plot Chart",
        "description": "Creates a violin plot to show the distribution shape of data across different categories, combining aspects of box plots and density plots.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Violin plot configuration with distribution data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViolinChartDto"
              },
              "examples": {
                "performance-distribution": {
                  "summary": "Performance Score Distribution",
                  "description": "Violin plot showing performance score distribution across teams",
                  "value": {
                    "title": "Team Performance Score Distribution",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "category": "Team A",
                        "values": [85, 87, 89, 92, 88, 91, 86, 90, 87, 93, 89, 88, 91, 87, 90]
                      },
                      {
                        "category": "Team B",
                        "values": [78, 82, 85, 88, 81, 84, 79, 86, 83, 87, 80, 85, 82, 84, 81]
                      },
                      {
                        "category": "Team C",
                        "values": [92, 95, 93, 97, 94, 96, 91, 98, 95, 94, 93, 96, 92, 95, 97]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Violin plot generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid violin plot distribution data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    },
    "/api/chart-generators/word-cloud": {
      "post": {
        "operationId": "generateWordCloudChart",
        "summary": "Generate Word Cloud Chart",
        "description": "Creates a word cloud visualization where word size represents frequency or importance, perfect for text analysis and keyword visualization.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Word cloud configuration with text and frequency data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WordCloudChartDto"
              },
              "examples": {
                "technology-trends": {
                  "summary": "Technology Trends Word Cloud",
                  "description": "Word cloud showing trending technologies and their popularity",
                  "value": {
                    "title": "Technology Trends 2023",
                    "width": 800,
                    "height": 600,
                    "theme": "default",
                    "data": [
                      {
                        "text": "JavaScript",
                        "value": 100
                      },
                      {
                        "text": "TypeScript",
                        "value": 85
                      },
                      {
                        "text": "React",
                        "value": 90
                      },
                      {
                        "text": "Node.js",
                        "value": 75
                      },
                      {
                        "text": "Python",
                        "value": 95
                      },
                      {
                        "text": "Docker",
                        "value": 70
                      },
                      {
                        "text": "Kubernetes",
                        "value": 65
                      },
                      {
                        "text": "AWS",
                        "value": 80
                      },
                      {
                        "text": "Machine Learning",
                        "value": 88
                      },
                      {
                        "text": "Artificial Intelligence",
                        "value": 92
                      },
                      {
                        "text": "Blockchain",
                        "value": 60
                      },
                      {
                        "text": "Cloud Computing",
                        "value": 78
                      },
                      {
                        "text": "DevOps",
                        "value": 72
                      },
                      {
                        "text": "Microservices",
                        "value": 68
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Word cloud generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid word cloud data provided"
          },
          "500": {
            "description": "Internal server error during chart generation"
          }
        },
        "tags": [
          "Chart Generators"
        ]
      }
    }
  },
  "info": {
    "title": "MCP Server Chart MinIO API",
    "description": "API documentation for MCP Server Chart MinIO - A NestJS-based server for MinIO object storage operations and chart rendering using @antv/gpt-vis-ssr",
    "version": "1.0",
    "contact": {

    }
  },
  "tags": [
    {
      "name": "chart",
      "description": "Chart rendering operations"
    },
    {
      "name": "chart-generators",
      "description": "Chart generator endpoints for specific chart types"
    },
    {
      "name": "minio",
      "description": "MinIO operations"
    },
    {
      "name": "health",
      "description": "Health check endpoints"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Local server"
    }
  ],
  "components": {
    "schemas": {
      "AreaChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Area chart data with x and y coordinates",
            "example": [
              {
                "time": "2020-01",
                "value": 100
              },
              {
                "time": "2020-02",
                "value": 120
              },
              {
                "time": "2020-03",
                "value": 140
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "string",
                  "description": "Time period"
                },
                "value": {
                  "type": "number",
                  "description": "Numeric value"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "ChartResponseDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "MinIO URL to access the rendered chart image",
            "example": "http://localhost:9000/charts/chart-uuid.png?X-Amz-..."
          },
          "filename": {
            "type": "string",
            "description": "Generated filename in MinIO storage",
            "example": "chart-12345678-1234-1234-1234-123456789abc.png"
          }
        },
        "required": [
          "url",
          "filename"
        ]
      },
      "BarChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Bar chart data with categories and values",
            "example": [
              {
                "category": "Product A",
                "value": 100
              },
              {
                "category": "Product B",
                "value": 200
              },
              {
                "category": "Product C",
                "value": 150
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "description": "Category name"
                },
                "value": {
                  "type": "number",
                  "description": "Numeric value"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "BoxplotChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Boxplot data with statistical values",
            "example": [
              {
                "category": "Group A",
                "min": 10,
                "q1": 15,
                "median": 20,
                "q3": 25,
                "max": 30
              },
              {
                "category": "Group B",
                "min": 12,
                "q1": 18,
                "median": 22,
                "q3": 28,
                "max": 35
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "description": "Category name"
                },
                "min": {
                  "type": "number",
                  "description": "Minimum value"
                },
                "q1": {
                  "type": "number",
                  "description": "First quartile"
                },
                "median": {
                  "type": "number",
                  "description": "Median value"
                },
                "q3": {
                  "type": "number",
                  "description": "Third quartile"
                },
                "max": {
                  "type": "number",
                  "description": "Maximum value"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "ColumnChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Column chart data with categories and values",
            "example": [
              {
                "category": "Q1",
                "value": 100
              },
              {
                "category": "Q2",
                "value": 150
              },
              {
                "category": "Q3",
                "value": 120
              },
              {
                "category": "Q4",
                "value": 180
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "description": "Category name"
                },
                "value": {
                  "type": "number",
                  "description": "Numeric value"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "DistrictMapDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "District map data with geographic regions and values",
            "example": [
              {
                "district": "Beijing",
                "value": 100
              },
              {
                "district": "Shanghai",
                "value": 120
              },
              {
                "district": "Guangzhou",
                "value": 90
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "district": {
                  "type": "string",
                  "description": "District or region name"
                },
                "value": {
                  "type": "number",
                  "description": "Value for this district"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "DualAxesDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Dual axes chart data with two different value series",
            "example": [
              {
                "time": "2020",
                "sales": 100,
                "profit": 20
              },
              {
                "time": "2021",
                "sales": 120,
                "profit": 25
              },
              {
                "time": "2022",
                "sales": 140,
                "profit": 30
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "string",
                  "description": "Time period"
                },
                "sales": {
                  "type": "number",
                  "description": "Sales value (left axis)"
                },
                "profit": {
                  "type": "number",
                  "description": "Profit value (right axis)"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "FishboneDiagramDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Fishbone diagram data with causes and categories",
            "example": [
              {
                "category": "People",
                "cause": "Lack of training"
              },
              {
                "category": "Process",
                "cause": "Inefficient workflow"
              },
              {
                "category": "Equipment",
                "cause": "Old machinery"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "description": "Cause category"
                },
                "cause": {
                  "type": "string",
                  "description": "Specific cause description"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowDiagramDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Flow diagram data with nodes and connections",
            "example": [
              {
                "id": "1",
                "label": "Start",
                "type": "start"
              },
              {
                "id": "2",
                "label": "Process",
                "type": "process"
              },
              {
                "id": "3",
                "label": "End",
                "type": "end"
              },
              {
                "from": "1",
                "to": "2"
              },
              {
                "from": "2",
                "to": "3"
              }
            ],
            "items": {
              "type": "object",
              "description": "Node or edge object"
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "FunnelChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Funnel chart data with stages and values",
            "example": [
              {
                "stage": "Awareness",
                "value": 1000
              },
              {
                "stage": "Interest",
                "value": 800
              },
              {
                "stage": "Consideration",
                "value": 500
              },
              {
                "stage": "Purchase",
                "value": 200
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "stage": {
                  "type": "string",
                  "description": "Funnel stage name"
                },
                "value": {
                  "type": "number",
                  "description": "Number of items in this stage"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "HistogramChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Histogram data with bins and frequencies",
            "example": [
              {
                "bin": "0-10",
                "frequency": 5
              },
              {
                "bin": "10-20",
                "frequency": 12
              },
              {
                "bin": "20-30",
                "frequency": 8
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "bin": {
                  "type": "string",
                  "description": "Bin range"
                },
                "frequency": {
                  "type": "number",
                  "description": "Frequency count"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "LineChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Line chart data with x and y coordinates",
            "example": [
              {
                "x": "2020",
                "y": 100
              },
              {
                "x": "2021",
                "y": 120
              },
              {
                "x": "2022",
                "y": 140
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "x": {
                  "type": "string",
                  "description": "X-axis value"
                },
                "y": {
                  "type": "number",
                  "description": "Y-axis value"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "LiquidChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Liquid chart data with percentage value",
            "example": [
              {
                "percent": 0.65
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "percent": {
                  "type": "number",
                  "description": "Percentage value (0-1)"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "MindMapDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Mind map data with hierarchical structure",
            "example": [
              {
                "id": "1",
                "name": "Central Topic",
                "parent": null
              },
              {
                "id": "2",
                "name": "Branch 1",
                "parent": "1"
              },
              {
                "id": "3",
                "name": "Branch 2",
                "parent": "1"
              },
              {
                "id": "4",
                "name": "Sub-branch",
                "parent": "2"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Node ID"
                },
                "name": {
                  "type": "string",
                  "description": "Node name"
                },
                "parent": {
                  "type": "string",
                  "description": "Parent node ID",
                  "nullable": true
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "NetworkGraphDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Network graph data with nodes and edges",
            "example": [
              {
                "id": "A",
                "label": "Node A"
              },
              {
                "id": "B",
                "label": "Node B"
              },
              {
                "id": "C",
                "label": "Node C"
              },
              {
                "source": "A",
                "target": "B"
              },
              {
                "source": "B",
                "target": "C"
              }
            ],
            "items": {
              "type": "object",
              "description": "Node or edge object"
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Organization chart data with hierarchical structure",
            "example": [
              {
                "id": "1",
                "name": "CEO",
                "title": "Chief Executive Officer",
                "parent": null
              },
              {
                "id": "2",
                "name": "CTO",
                "title": "Chief Technology Officer",
                "parent": "1"
              },
              {
                "id": "3",
                "name": "CFO",
                "title": "Chief Financial Officer",
                "parent": "1"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Employee ID"
                },
                "name": {
                  "type": "string",
                  "description": "Employee name"
                },
                "title": {
                  "type": "string",
                  "description": "Job title"
                },
                "parent": {
                  "type": "string",
                  "description": "Manager ID",
                  "nullable": true
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "PathMapDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Path map data with geographic paths and routes",
            "example": [
              {
                "from": "Beijing",
                "to": "Shanghai",
                "value": 100
              },
              {
                "from": "Shanghai",
                "to": "Guangzhou",
                "value": 80
              },
              {
                "from": "Guangzhou",
                "to": "Shenzhen",
                "value": 60
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "Starting location"
                },
                "to": {
                  "type": "string",
                  "description": "Destination location"
                },
                "value": {
                  "type": "number",
                  "description": "Path value or traffic"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "PieChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Pie chart data with categories and values",
            "example": [
              {
                "category": "Desktop",
                "value": 61.41
              },
              {
                "category": "Mobile",
                "value": 30.77
              },
              {
                "category": "Tablet",
                "value": 7.82
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "description": "Category name"
                },
                "value": {
                  "type": "number",
                  "description": "Percentage or count"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "PinMapDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Pin map data with geographic coordinates and values",
            "example": [
              {
                "lat": 39.9042,
                "lng": 116.4074,
                "name": "Beijing",
                "value": 100
              },
              {
                "lat": 31.2304,
                "lng": 121.4737,
                "name": "Shanghai",
                "value": 120
              },
              {
                "lat": 23.1291,
                "lng": 113.2644,
                "name": "Guangzhou",
                "value": 90
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "lat": {
                  "type": "number",
                  "description": "Latitude coordinate"
                },
                "lng": {
                  "type": "number",
                  "description": "Longitude coordinate"
                },
                "name": {
                  "type": "string",
                  "description": "Location name"
                },
                "value": {
                  "type": "number",
                  "description": "Value at this location"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "RadarChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Radar chart data with multiple dimensions",
            "example": [
              {
                "dimension": "Speed",
                "value": 85
              },
              {
                "dimension": "Strength",
                "value": 70
              },
              {
                "dimension": "Defense",
                "value": 90
              },
              {
                "dimension": "Intelligence",
                "value": 95
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "dimension": {
                  "type": "string",
                  "description": "Dimension name"
                },
                "value": {
                  "type": "number",
                  "description": "Value for this dimension"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "SankeyChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Sankey diagram data with flows between nodes",
            "example": [
              {
                "source": "Energy",
                "target": "Electricity",
                "value": 100
              },
              {
                "source": "Energy",
                "target": "Heat",
                "value": 50
              },
              {
                "source": "Electricity",
                "target": "Lighting",
                "value": 30
              },
              {
                "source": "Electricity",
                "target": "Appliances",
                "value": 70
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string",
                  "description": "Source node"
                },
                "target": {
                  "type": "string",
                  "description": "Target node"
                },
                "value": {
                  "type": "number",
                  "description": "Flow value"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "ScatterChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Scatter plot data with x and y coordinates",
            "example": [
              {
                "x": 161.2,
                "y": 51.6
              },
              {
                "x": 167.5,
                "y": 59
              },
              {
                "x": 159.5,
                "y": 49.2
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "x": {
                  "type": "number",
                  "description": "X-axis coordinate"
                },
                "y": {
                  "type": "number",
                  "description": "Y-axis coordinate"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "TreemapChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Treemap data with hierarchical structure",
            "example": [
              {
                "name": "Root",
                "parent": "",
                "value": 100
              },
              {
                "name": "Category A",
                "parent": "Root",
                "value": 60
              },
              {
                "name": "Category B",
                "parent": "Root",
                "value": 40
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Node name"
                },
                "parent": {
                  "type": "string",
                  "description": "Parent node name"
                },
                "value": {
                  "type": "number",
                  "description": "Node value"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "VennChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Venn diagram data with sets and intersections",
            "example": [
              {
                "sets": [
                  "A"
                ],
                "size": 12
              },
              {
                "sets": [
                  "B"
                ],
                "size": 12
              },
              {
                "sets": [
                  "A",
                  "B"
                ],
                "size": 2
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "sets": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Set names"
                },
                "size": {
                  "type": "number",
                  "description": "Size of intersection"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "ViolinChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Violin plot data with distribution values",
            "example": [
              {
                "category": "Group A",
                "values": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
              },
              {
                "category": "Group B",
                "values": [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "description": "Category name"
                },
                "values": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "description": "Distribution values"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      },
      "WordCloudChartDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Word cloud data with words and frequencies",
            "example": [
              {
                "text": "javascript",
                "value": 100
              },
              {
                "text": "typescript",
                "value": 80
              },
              {
                "text": "react",
                "value": 60
              },
              {
                "text": "nodejs",
                "value": 70
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Word text"
                },
                "value": {
                  "type": "number",
                  "description": "Word frequency or importance"
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Chart title",
            "example": "Monthly Sales Data"
          },
          "width": {
            "type": "number",
            "description": "Chart width in pixels",
            "example": 800,
            "default": 800
          },
          "height": {
            "type": "number",
            "description": "Chart height in pixels",
            "example": 600,
            "default": 600
          },
          "theme": {
            "type": "string",
            "description": "Chart theme",
            "enum": [
              "default",
              "academy"
            ],
            "example": "default",
            "default": "default"
          }
        },
        "required": [
          "data"
        ]
      }
    }
  }
}